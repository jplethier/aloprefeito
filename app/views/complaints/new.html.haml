= form_for @complaint, :class => 'form-horizontal' do |f|
  = f.hidden_field :user_id, :value => current_user.id
  .span12
    .span5
      %h1= t('complainment.new')
      %p
        = f.check_box :anonymous, :checked => true, :style => 'float: left;', :onclick => "jQuery('.facebook_post').toggle();;"
        = f.label :anonymous, :style => 'float: left; margin-left: 5px;'
      %p.facebook_post{ :style => "display: none;"}
        = f.check_box :facebook_post, :checked => true, :style => 'float: left; margin-left: 10px;'
        = f.label :facebook_post, :style => 'float: left; margin-left: 5px;'
      .clear
      .control-group
        = f.label :title
        .controls
          = f.text_field :title
      .control-group
        = f.label :description
        .controls
          / = f.text_area :description
          = cktext_area :complaint, :description, :toolbar => 'Basic'
      .control-group
        = f.label :tags
        .controls
          = f.text_field :tag_list, :id => "complaint_tags", "data-pre" => @complaint.tags.map(&:attributes).to_json


    .span6
      %h1= t('complainment.maps')
      %p Navegue no mapa abaixo e clique na posição desejada
      =gmaps({ "map_options" => { "libraries" => ["places"], :center_latitude => -22, :center_longitude => -44, :zoom => 6 } })
      = f.fields_for :maps do |map|
        = map.hidden_field :latitude, {:id => "latitude_field", :value => "-22"}
        = map.hidden_field :longitude, {:id => "longitude_field", :value => "-44"}
        = map.hidden_field :attachment_type, :value => Attachment::TYPES[:map]
        .control-group
          = map.label :city, t('complainment.map.city')
          .controls
            = map.text_field :city

  .span12
    %h1.attachments= t('complainment.attachments')
    %p= t('complainment.optionals')
    .span3
      %p= t('complainment.urls')
      = f.fields_for :fonts do |font|
        = font.hidden_field :attachment_type, :value => 1
        .control-group
          = font.label :url, t('complainment.fonts.url')
          .controls
            = font.text_field :url

    .span3
      %p= t('complainment.pictures')
      = f.fields_for :pictures do |pic|
        = pic.hidden_field :attachment_type, :value => 4
        .control-group
          = pic.label :attachment, t('complainment.picture.attachment')
          .controls
            = pic.file_field :attachment


    .span3
      %p= t('complainment.video')
      = f.fields_for :embeds do |video|
        = video.hidden_field :attachment_type, :value => 2
        .control-group
          = video.label :url, t('complainment.fonts.url')
          .controls
            = video.text_field :url
    .span12
      = f.submit t('buttons.complainment.new'), :class => 'btn'

      =content_for :scripts do
        %script{:type => "text/javascript", :charset => "utf-8"}
          var markersArray = [];
          Gmaps.map.callback = function() {
          google.maps.event.addListener(Gmaps.map.serviceObject, 'click', function(event) {
          clearOverlays();
          placeMarker(event.latLng);
          updateFormLocation(event.latLng);
          });
          };
          function updateFormLocation(latLng) {
          document.getElementById("latitude_field").value = (latLng.lat());
          document.getElementById("longitude_field").value = (latLng.lng());
          }
          function placeMarker(latLng) {
          var marker = new google.maps.Marker({
          position: latLng,
          map: Gmaps.map.serviceObject,
          draggable: true
          });
          markersArray.push(marker);
          var infowindow = new google.maps.InfoWindow({
          content: '<div class="popup"><h2>Local da denuncia</h2><p>Você pode me arrastar E ajustar o zoom!</p>'
          });
          infowindow.open(Gmaps.map.serviceObject,marker);
          google.maps.event.addListener(marker, 'dragend', function() {
          updateFormLocation(this.getPosition());
          });
          }
          function clearOverlays() {
          if (markersArray) {
          for (var i = 0; i < markersArray.length; i++ ) {
          markersArray[i].setMap(null);
          }
          }
          markersArray.length = 0;
          }
